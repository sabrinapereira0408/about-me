{"ast":null,"code":"import { randomNumber, interpolate } from \"../../utils\";\n\nfunction RainCanvas(canvasNode) {\n  if (!window) return;\n  const state = {\n    canvasNode,\n    canvas: null,\n    colors: [\"function \", \"#DA71AD\", \"#6BBD7C\", \"#D4E080\", \"#C8CACF\", \"#282A36\"],\n    widthToOpacity: interpolate([50, 100], [0.2, 1]),\n    widthToBlur: interpolate([50, 100], [8, 0]),\n    constants: {\n      innerWidth: window.innerWidth,\n      innerHeight: window.innerHeight\n    },\n    removeRain: function () {\n      window.removeEventListener(\"resize\", onResize);\n    },\n    getWindowSize: function () {\n      return {\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight\n      };\n    },\n    updateConstants: function () {\n      this.constants = this.getWindowSize();\n    },\n    setSize: function (width, height) {\n      this.canvasNode.width = width;\n      this.canvasNode.height = height;\n    },\n    init: function () {\n      window.addEventListener(\"resize\", onResize);\n      onResize();\n      this.initCanvas();\n      this.initAnimation();\n    },\n    initCanvas: function () {\n      this.canvas = this.canvasNode.getContext('2d');\n    },\n    initAnimation: async function () {\n      await this.runAnimation();\n    },\n    runAnimation: async function () {\n      const rain = {\n        length: 2,\n        items: [],\n        context: null,\n        init: function (context) {\n          this.context = context;\n          Array.from({\n            length: this.length\n          }).forEach(() => {\n            this.items.push(this.generateItem.call(this));\n          });\n        },\n        generateItem: function () {\n          const size = randomNumber(50, 100);\n          const {\n            innerWidth,\n            innerHeight\n          } = this.context.constants;\n          const possiblePositions = ['', ''].map((_, i) => {\n            const useVertical = i === 0;\n            const a = [0 - size, 0];\n            const relativeB = randomNumber(0, useVertical ? innerHeight : innerWidth);\n            const b = [relativeB - size, relativeB];\n            return {\n              x: useVertical ? a : b,\n              y: useVertical ? b : a\n            };\n          });\n          const pos = {\n            velocity: randomNumber(20, 40),\n            ...possiblePositions[randomNumber(0, 1)],\n            color: this.context.colors[randomNumber(0, this.context.colors.length - 1)]\n          };\n          return pos;\n        },\n        animate: function () {\n          function runAnimation() {\n            this.nextFrame();\n            this.renderFrame();\n            requestAnimationFrame(runAnimation.bind(this));\n          }\n\n          runAnimation.call(this);\n        },\n        nextFrame: function () {\n          this.items = this.items.map(item => {\n            const {\n              innerWidth,\n              innerHeight\n            } = this.context.constants;\n            const {\n              x,\n              y\n            } = {\n              x: innerWidth,\n              y: innerHeight\n            };\n            let newPos = { ...item,\n              x: [item.x[0] + item.velocity, item.x[1] + item.velocity],\n              y: [item.y[0] + item.velocity, item.y[1] + item.velocity]\n            };\n            if (newPos.x[0] >= x || newPos.y[0] >= y) newPos = this.generateItem();\n            return newPos;\n          });\n        },\n        renderFrame: function () {\n          this.context.clearCanvas();\n          this.items.forEach(item => {\n            const {\n              x,\n              y\n            } = item;\n            this.context.drawLine(x[0], y[0], x[1], y[1], {\n              color: item.color\n            });\n          });\n        }\n      };\n      rain.init(this);\n      requestAnimationFrame(rain.animate.bind(rain));\n    },\n    clearCanvas: function () {\n      this.canvas.clearRect(0, 0, this.canvasNode.width, this.canvasNode.height);\n    },\n    drawLine: function (xI, yI, xF, yF, {\n      color\n    }) {\n      const line = new Path2D();\n      line.moveTo(xI, yI);\n      line.lineTo(xF, yF);\n      const width = xF - xI;\n      this.canvas.beginPath();\n      this.canvas.globalAlpha = this.widthToOpacity(width);\n      this.canvas.strokeStyle = color;\n      this.canvas.stroke(line);\n    }\n  };\n\n  var onResize = function () {\n    this.updateConstants();\n    const {\n      innerWidth,\n      innerHeight\n    } = this.constants;\n    this.setSize(innerWidth, innerHeight);\n  }.bind(state);\n\n  state.init();\n  return state;\n}\n\nexport default RainCanvas;","map":{"version":3,"sources":["/home/sabrina/Documentos/about-me/src/components/Rain/animation.js"],"names":["randomNumber","interpolate","RainCanvas","canvasNode","window","state","canvas","colors","widthToOpacity","widthToBlur","constants","innerWidth","innerHeight","removeRain","removeEventListener","onResize","getWindowSize","updateConstants","setSize","width","height","init","addEventListener","initCanvas","initAnimation","getContext","runAnimation","rain","length","items","context","Array","from","forEach","push","generateItem","call","size","possiblePositions","map","_","i","useVertical","a","relativeB","b","x","y","pos","velocity","color","animate","nextFrame","renderFrame","requestAnimationFrame","bind","item","newPos","clearCanvas","drawLine","clearRect","xI","yI","xF","yF","line","Path2D","moveTo","lineTo","beginPath","globalAlpha","strokeStyle","stroke"],"mappings":"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","sourcesContent":["import { randomNumber, interpolate } from \"../../utils\";\n\nfunction RainCanvas(canvasNode) {\n    if (!window) return;\n\n    const state = {\n        canvasNode,\n        canvas: null,\n        colors: [\"function \", \"#DA71AD\", \"#6BBD7C\", \"#D4E080\", \"#C8CACF\", \"#282A36\"],\n        widthToOpacity: interpolate([50, 100], [0.2, 1]),\n        widthToBlur: interpolate([50, 100], [8, 0]),\n        constants: {\n            innerWidth: window.innerWidth,\n            innerHeight: window.innerHeight,\n        },\n        removeRain: function () {\n            window.removeEventListener(\"resize\", onResize);\n        },\n        getWindowSize: function () {\n            return {\n                innerWidth: window.innerWidth,\n                innerHeight: window.innerHeight,\n            }\n        },\n        updateConstants: function () {\n            this.constants = this.getWindowSize();\n        },\n        setSize: function (width, height) {\n            this.canvasNode.width = width;\n            this.canvasNode.height = height;\n        },\n        init: function () {\n            window.addEventListener(\"resize\", onResize);\n\n            onResize();\n            this.initCanvas();\n            this.initAnimation();\n        },\n        initCanvas: function () {\n            this.canvas = this.canvasNode.getContext('2d');\n        },\n        initAnimation: async function () {\n            await this.runAnimation();\n        },\n        runAnimation: async function () {\n            const rain = {\n                length: 2,\n                items: [],\n                context: null,\n                init: function (context) {\n                    this.context = context;\n\n                    Array.from({ length: this.length }).forEach(() => {\n                        this.items.push(this.generateItem.call(this));\n                    })\n                },\n                generateItem: function () {\n                    const size = randomNumber(50, 100);\n\n                    const { innerWidth, innerHeight } = this.context.constants;\n\n                    const possiblePositions = ['', ''].map((_, i) => {\n                        const useVertical = i === 0;\n\n                        const a = [0 - size, 0];\n                        const relativeB = randomNumber(0, (useVertical ? innerHeight : innerWidth));\n                        const b = [relativeB - size, relativeB]\n\n                        return {\n                            x: useVertical ? a : b,\n                            y: useVertical ? b : a\n                        }\n                    });\n\n                    const pos = {\n                        velocity: randomNumber(20, 40),\n                        ...possiblePositions[randomNumber(0, 1)],\n                        color: this.context.colors[randomNumber(0, this.context.colors.length - 1)],\n                    };\n\n                    return pos;\n                },\n                animate: function () {\n\n                    function runAnimation() {\n                        this.nextFrame();\n                        this.renderFrame();\n                        requestAnimationFrame(runAnimation.bind(this));\n                    }\n                    runAnimation.call(this);\n                },\n                nextFrame: function () {\n                    this.items = this.items.map(item => {\n                        const { innerWidth, innerHeight } = this.context.constants;\n\n                        const { x, y } = {\n                            x: innerWidth,\n                            y: innerHeight\n                        }\n\n                        let newPos = {\n                            ...item,\n                            x: [item.x[0] + item.velocity, item.x[1] + item.velocity],\n                            y: [item.y[0] + item.velocity, item.y[1] + item.velocity],\n                        }\n\n                        if (newPos.x[0] >= x || newPos.y[0] >= y)\n                            newPos = this.generateItem();\n\n\n                        return newPos;\n                    });\n                },\n                renderFrame: function () {\n                    this.context.clearCanvas();\n                    this.items.forEach(item => {\n                        const { x, y } = item;\n                        this.context.drawLine(x[0], y[0], x[1], y[1], {\n                            color: item.color,\n                        });\n                    });\n                }\n            }\n            rain.init(this);\n\n            requestAnimationFrame(rain.animate.bind(rain));\n        },\n        clearCanvas: function () {\n            this.canvas.clearRect(0, 0, this.canvasNode.width, this.canvasNode.height);\n        },\n        drawLine: function (xI, yI, xF, yF, {\n            color\n        }) {\n            const line = new Path2D();\n\n            line.moveTo(xI, yI);\n            line.lineTo(xF, yF);\n\n            const width = xF - xI;\n\n            this.canvas.beginPath();\n            this.canvas.globalAlpha = this.widthToOpacity(width);\n            this.canvas.strokeStyle = color;\n\n            this.canvas.stroke(line);\n        }\n    }\n\n    var onResize = function () {\n        this.updateConstants();\n\n        const { innerWidth, innerHeight } = this.constants;\n        this.setSize(innerWidth, innerHeight);\n    }.bind(state);\n\n    state.init();\n\n    return state;\n}\n\nexport default RainCanvas;"]},"metadata":{},"sourceType":"module"}